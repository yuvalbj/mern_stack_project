{"ast":null,"code":"import axios from 'axios';\n\nconst getAllSubscription = () => {\n  return axios.get(\"http://localhost:8000/api/subscriptions\");\n}; // const getSub = (id)=> \n// {\n//     return axios.get(\"http://localhost:8000/api/subscriptions/\" + id);\n// }\n\n\nconst addSub = newSub => {\n  return axios.post(\"http://localhost:8000/api/subscriptions\", newSub);\n};\n\nconst getSubsPerMovieID = async (id) => {\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let allSubs = resp.data;\n  let result = [];\n  let resp1 = await axios.get(\"http://localhost:8000/api/members\");\n  let allMembers = resp1.data;\n  allSubs.forEach(sub => {\n    if (sub.movie_id === id) {\n      allMembers.forEach(mem => {\n        if (mem._id === sub.member_id) {\n          let obj = {\n            id: sub._id,\n            date: sub.date,\n            memId: mem._id,\n            memName: mem.name\n          };\n          result.push(obj);\n        }\n      });\n    }\n  });\n  return result;\n};\n\nconst getSubsPerMemberID = async (id) => {\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let allSubs = resp.data;\n  let result = [];\n  let resp1 = await axios.get(\"http://localhost:8000/api/movies\");\n  let allMovies = resp1.data;\n  allSubs.forEach(sub => {\n    if (sub.member_id === id) {\n      allMovies.forEach(mov => {\n        if (mov._id === sub.movie_id) {\n          let obj = {\n            id: sub._id,\n            date: sub.date,\n            movId: mov._id,\n            movName: mov.name\n          };\n          result.push(obj);\n        }\n      });\n    }\n  });\n  return result;\n};\n\nconst getMoviesDidNotWatchedForMember = async (id) => {\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let allSubs = resp.data;\n  let result = [];\n  let resp1 = await axios.get(\"http://localhost:8000/api/movies\");\n  let allMovies = resp1.data;\n  allSubs.forEach(sub => {\n    if (sub.member_id === id) {\n      allMovies.forEach(mov => {\n        if (mov._id !== sub.movie_id) {\n          console.log(\"IF\");\n          result.push(mov);\n        }\n      });\n    } else {\n      console.log(\"ELSE\");\n      result = allMovies;\n    }\n  });\n  return result;\n};\n\nconst deleteSubPerMovie = async (id) => {\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let allSubs = resp.data;\n  allSubs.forEach(sub => {\n    if (sub.movie_id === id) {\n      axios.delete(\"http://localhost:8000/api/subscriptions/\" + sub._id).then(x => x.data);\n    }\n  });\n  return \"Deleted\";\n};\n\nconst deleteSubPerMember = async (id) => {\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let allSubs = resp.data;\n  allSubs.forEach(sub => {\n    if (sub.member_id === id) {\n      axios.delete(\"http://localhost:8000/api/subscriptions/\" + sub._id).then(x => x.data);\n    }\n  });\n  return \"Deleted\";\n};\n\nexport default {\n  getAllSubscription,\n  getSubsPerMovieID,\n  getSubsPerMemberID,\n  deleteSubPerMovie,\n  deleteSubPerMember,\n  addSub,\n  getMoviesDidNotWatchedForMember\n};","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/mern_stack_project/clinet/myapp/src/utils/subscriptionUtils.js"],"names":["axios","getAllSubscription","get","addSub","newSub","post","getSubsPerMovieID","id","resp","allSubs","data","result","resp1","allMembers","forEach","sub","movie_id","mem","_id","member_id","obj","date","memId","memName","name","push","getSubsPerMemberID","allMovies","mov","movId","movName","getMoviesDidNotWatchedForMember","console","log","deleteSubPerMovie","delete","then","x","deleteSubPerMember"],"mappings":"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","sourcesContent":["\nimport axios from 'axios';\n\nconst getAllSubscription = ()=> \n{\n    return axios.get(\"http://localhost:8000/api/subscriptions\");\n}\n\n// const getSub = (id)=> \n// {\n//     return axios.get(\"http://localhost:8000/api/subscriptions/\" + id);\n// }\n\n\nconst addSub = (newSub)=> \n{\n    return axios.post(\"http://localhost:8000/api/subscriptions\" , newSub);\n\n}\n\n\nconst getSubsPerMovieID = async (id) =>\n  {\n    let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n    let allSubs = resp.data;\n    let result = [];\n\n    let resp1 = await axios.get(\"http://localhost:8000/api/members\");\n    let allMembers = resp1.data;\n\n    allSubs.forEach(sub => \n      {\n        if(sub.movie_id === id)\n        {\n\n           allMembers.forEach(mem => \n            {\n              if(mem._id === sub.member_id)\n              {\n                  let obj = { id: sub._id , date : sub.date ,memId : mem._id, memName: mem.name}\n                  result.push(obj);\n              }\n            })\n        }\n      })\n     return result;\n    }\n\n\n  \nconst getSubsPerMemberID = async (id) =>\n{\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let allSubs = resp.data;\n  let result = [];\n\n  let resp1 = await axios.get(\"http://localhost:8000/api/movies\");\n  let allMovies = resp1.data;\n\n  allSubs.forEach(sub => \n    {\n      if(sub.member_id === id)\n      {\n\n        allMovies.forEach(mov => \n          {\n            if(mov._id === sub.movie_id)\n            {\n                let obj = { id: sub._id , date : sub.date , movId : mov._id, movName: mov.name}\n                result.push(obj);\n            }\n          })\n      }\n    })\n   return result;\n  }\n\n\n  const getMoviesDidNotWatchedForMember = async (id) =>\n{\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let allSubs = resp.data;\n  let result = [];\n\n  let resp1 = await axios.get(\"http://localhost:8000/api/movies\");\n  let allMovies = resp1.data;\n\n  allSubs.forEach(sub => \n    {\n      if(sub.member_id === id)\n      {\n        allMovies.forEach(mov => \n          {\n            if(mov._id !== sub.movie_id)\n            {\n              console.log(\"IF\")\n                result.push(mov);\n            }\n          })\n      }\n      else\n      {\n        console.log(\"ELSE\")\n        result = allMovies;\n      }\n    })\n   return result;\n  }\n\n  const deleteSubPerMovie = async (id) =>\n  {\n    let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n    let allSubs = resp.data;\n    \n    allSubs.forEach(sub => \n      {\n        if(sub.movie_id === id)\n        {\n\n          axios.delete(\"http://localhost:8000/api/subscriptions/\" + sub._id).then(x => x.data)\n        }\n      })\n\n     return \"Deleted\";\n    }\n\n  \n    const deleteSubPerMember = async (id) =>\n    {\n      let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n      let allSubs = resp.data;\n      \n      allSubs.forEach(sub => \n        {\n          if(sub.member_id === id)\n          {\n  \n            axios.delete(\"http://localhost:8000/api/subscriptions/\" + sub._id).then(x => x.data)\n            \n          }\n        })\n  \n       return \"Deleted\";\n      }\n\nexport default {getAllSubscription, getSubsPerMovieID , getSubsPerMemberID, deleteSubPerMovie,deleteSubPerMember ,addSub , getMoviesDidNotWatchedForMember};\n"]},"metadata":{},"sourceType":"module"}