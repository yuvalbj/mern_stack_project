{"ast":null,"code":"var _jsxFileName = \"/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/MovieComp.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieComp(props) {\n  _s();\n\n  const [movID, setMovId] = useState(props.movId);\n  const [movie, setMovie] = useState({});\n  useEffect(async () => {\n    let result = await moviesBL.getMovie(movID);\n    setMovie(result.data);\n  }, []);\n\n  const goToEdit = () => {\n    props.history.push('/movies');\n  };\n\n  const styles = {\n    border: '3px solid black',\n    margin: '2px',\n    width: '400px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: styles,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [movie.name, \", \", movie.premiered]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \"Genres:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movie.genres.map((gen, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: gen\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.image,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToEdit,\n      children: \"Edit Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieComp, \"t0Lv6WobEUATJiItBorYb1WvaHM=\");\n\n_c = MovieComp;\nexport default MovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieComp\");","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/MovieComp.js"],"names":["useState","useEffect","moviesBL","MovieComp","props","movID","setMovId","movId","movie","setMovie","result","getMovie","data","goToEdit","history","push","styles","border","margin","width","name","premiered","genres","map","gen","index","image"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBN,QAAQ,CAACI,KAAK,CAACG,KAAP,CAAnC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACtB,QAAIS,MAAM,GAAG,MAAMR,QAAQ,CAACS,QAAT,CAAkBN,KAAlB,CAAnB;AACAI,IAAAA,QAAQ,CAACC,MAAM,CAACE,IAAR,CAAR;AACC,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,QAAQ,GAAG,MACjB;AACET,IAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACD,GAHD;;AAIA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,iBADK;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbC,IAAAA,KAAK,EAAE;AAHM,GAAf;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAEH,MAA5B;AAAA,4BACE;AAAA,iBAAKR,KAAK,CAACY,IAAX,QAAmBZ,KAAK,CAACa,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,0BAGE;AAAA,gBACCb,KAAK,CAACc,MAAN,CAAaC,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,KAClB;AACE,4BAAO;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAHA;AADD;AAAA;AAAA;AAAA;AAAA,YAHF,eAUI;AAAK,MAAA,GAAG,EAAEjB,KAAK,CAACkB,KAAhB;AAAuB,MAAA,GAAG,EAAElB,KAAK,CAACY;AAAlC;AAAA;AAAA;AAAA;AAAA,YAVJ,eAYE;AAAQ,MAAA,OAAO,EAAEP,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnCQV,S;;KAAAA,S;AAqCT,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils'\n\n\nfunction MovieComp(props) {\n\n  const [movID , setMovId] = useState(props.movId)\n  const [movie, setMovie] = useState({})\n\n  useEffect(async () => {\n  let result = await moviesBL.getMovie(movID);\n  setMovie(result.data)\n  }, [])\n\n  const goToEdit = ()=>\n  {\n    props.history.push('/movies')\n  } \n  const styles = {\n    border: '3px solid black', \n    margin: '2px',\n    width: '400px'\n};\n  return (\n    <div className=\"App\" style={styles}>\n      <h3>{movie.name}, {movie.premiered}</h3>\n      Genres:\n      <ul>\n      {movie.genres.map((gen, index)=> \n      {\n        return <li key={index}>{gen}</li>\n      }) }\n        </ul> \n\n        <img src={movie.image} alt={movie.name} />\n\n      <button onClick={goToEdit}>Edit Movie</button>\n    </div>\n  );\n}\n\nexport default MovieComp;\n"]},"metadata":{},"sourceType":"module"}