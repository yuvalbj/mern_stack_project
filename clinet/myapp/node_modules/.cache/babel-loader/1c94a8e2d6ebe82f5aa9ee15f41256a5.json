{"ast":null,"code":"var _jsxFileName = \"/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/EditMovie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditMovieComp(props) {\n  _s();\n\n  const [movID] = useState(props.match.params.id);\n  const [movName, setMovName] = useState('');\n  const [movPre, setMovPre] = useState('');\n  const [movImg, setMovImg] = useState('');\n  const [movGen, setMovGen] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      let result = await moviesBL.getMovie(movID);\n      setMovName(result.data.name);\n      setMovPre(result.data.premiered);\n      setMovImg(result.data.image);\n      setMovGen(result.data.genres);\n    }\n\n    fetchData();\n  }, []);\n\n  const UpdateMov = async (e) => {\n    e.preventDefault();\n    let updatedMov = {\n      name: movName,\n      genres: movGen,\n      premiered: movPre,\n      image: movImg\n    };\n    let result = await moviesBL.updateMovie(movID, updatedMov);\n    alert(result.data);\n    props.history.push('/main/movies');\n  };\n\n  const goBack = () => {\n    props.history.push('/main/movies');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Edit Movie \", sessionStorage[\"fullName\"]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => UpdateMov(e),\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: movName,\n        onChange: e => setMovName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 95\n      }, this), \"Premiered: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: movPre,\n        onChange: e => setMovPre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 98\n      }, this), \"Image Url: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: movImg,\n        onChange: e => setMovImg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 98\n      }, this), \"Genres: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: movGen,\n        onChange: e => setMovGen(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Cancel\",\n        onClick: goBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditMovieComp, \"fItzUNLI2E5mVK37I/Six8+xKjY=\");\n\n_c = EditMovieComp;\nexport default EditMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovieComp\");","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/EditMovie.js"],"names":["useState","useEffect","moviesBL","EditMovieComp","props","movID","match","params","id","movName","setMovName","movPre","setMovPre","movImg","setMovImg","movGen","setMovGen","fetchData","result","getMovie","data","name","premiered","image","genres","UpdateMov","e","preventDefault","updatedMov","updateMovie","alert","history","push","goBack","sessionStorage","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils'\n\n\nfunction EditMovieComp(props) {\n\n  const [movID] = useState(props.match.params.id)\n  const [movName, setMovName] = useState('');\n  const [movPre, setMovPre] = useState('');\n  const [movImg, setMovImg] = useState('');\n  const [movGen, setMovGen] = useState([]);\n\n\n\n  useEffect( () => {\n   async function fetchData() {\n  let result = await moviesBL.getMovie(movID);\n  setMovName(result.data.name);\n  setMovPre(result.data.premiered);\n  setMovImg(result.data.image)\n  setMovGen(result.data.genres)\n   }\n   fetchData();\n  }, [])\n\n \n\n  const UpdateMov = async (e) => \n  {\n    e.preventDefault();\n    let updatedMov = {name: movName, genres: movGen, premiered : movPre, image: movImg };\n    let result = await moviesBL.updateMovie(movID , updatedMov);\n    alert(result.data);\n    props.history.push('/main/movies')\n\n\n  }\n\n  const goBack = () => \n  {\n    props.history.push('/main/movies')\n\n  }\n  return (\n    <div className=\"App\">\n      <h3>Edit Movie {sessionStorage[\"fullName\"]}</h3>\n    \n    <form onSubmit={e => UpdateMov(e)}>\n      Name: <input type=\"text\" value={movName} onChange={ e => setMovName(e.target.value)} /> <br/>\n      Premiered: <input type=\"text\" value={movPre} onChange={ e => setMovPre(e.target.value)} /> <br/>\n      Image Url: <input type=\"text\" value={movImg} onChange={ e => setMovImg(e.target.value)} /> <br/>\n      Genres: <input type=\"text\" value={movGen} onChange={ e => setMovGen(e.target.value)} /> <br/>\n      <input type=\"submit\" value=\"Update\" />\n      <input type=\"button\" value=\"Cancel\" onClick={goBack} />\n    </form>\n    </div>\n  );\n}\n\nexport default EditMovieComp;\n"]},"metadata":{},"sourceType":"module"}