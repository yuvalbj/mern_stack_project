{"ast":null,"code":"var _jsxFileName = \"/Users/fundguard/Desktop/Full stack course/HW/Projects/React/mern_stack_project/clinet/myapp/src/movies/MovieComp.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moviesBL from '../utils/moviesUtils';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SubPerMovie from \"../subscriptions/SubPerMovie\";\nimport subBL from '../utils/subscriptionUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    margin: 10\n  },\n  media: {\n    height: 250,\n    width: 200\n  }\n});\n\nfunction MovieComp(props) {\n  _s();\n\n  const classes = useStyles();\n  const [movID, setMovID] = useState(props.movId);\n  const [movie, setMovie] = useState({});\n  const [movGen, setMovGen] = useState([]); //   useEffect( () => {\n  //     async function fetchData() {\n  //       let result = await moviesBL.getMovie(movID);\n  //       setMovie(result.data)\n  //       setMovGen(result.data.genres)\n  //     }\n  //     fetchData();\n  // },[movID])\n\n  useEffect(() => {\n    let isMounted = true;\n\n    async function fetchData() {\n      let result = await moviesBL.getMovie(movID);\n\n      if (isMounted) {\n        setMovie(result.data);\n        setMovGen(result.data.genres);\n      }\n    }\n\n    fetchData();\n    return () => {\n      isMounted = false;\n    };\n  }, [movID]);\n\n  const goToEdit = () => {\n    props.history.push(\"/main/movies/edit-movie/\" + movID);\n  };\n\n  const deleteMov = async () => {\n    let result = await moviesBL.deleteMovie(movID);\n    let result2 = await subBL.deleteSubPerMovie(movID);\n    alert(result.data);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        children: [movie.name, \", \", movie.premiered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: [\"Genres: \\xA0\", movGen.map((gen, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [gen, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        className: classes.media,\n        image: movie.image,\n        title: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubPerMovie, {\n        movId: movID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goToEdit,\n        size: \"small\",\n        color: \"primary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: deleteMov,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieComp, \"i5rztZ8WdpvOIFJzbnymVxC28KU=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieComp;\nexport default _c2 = withRouter(MovieComp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieComp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/mern_stack_project/clinet/myapp/src/movies/MovieComp.js"],"names":["useState","useEffect","moviesBL","withRouter","makeStyles","Card","CardActions","CardContent","CardMedia","Button","Typography","SubPerMovie","subBL","useStyles","root","maxWidth","margin","media","height","width","MovieComp","props","classes","movID","setMovID","movId","movie","setMovie","movGen","setMovGen","isMounted","fetchData","result","getMovie","data","genres","goToEdit","history","push","deleteMov","deleteMovie","result2","deleteSubPerMovie","alert","window","location","reload","name","premiered","map","gen","index","image"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moviesBL from '../utils/moviesUtils'\nimport {withRouter} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SubPerMovie from \"../subscriptions/SubPerMovie\";\nimport subBL from '../utils/subscriptionUtils';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    margin: 10\n\n  },\n  media: {\n    height: 250,\n    width: 200\n  },\n});\n\nfunction MovieComp(props) {\n\n  const classes = useStyles();\n\n  const [movID, setMovID] = useState(props.movId);\n  const [movie, setMovie] = useState({});\n  const [movGen , setMovGen] = useState([]);\n\n\n\n  //   useEffect( () => {\n  //     async function fetchData() {\n  //       let result = await moviesBL.getMovie(movID);\n  //       setMovie(result.data)\n  //       setMovGen(result.data.genres)\n  //     }\n  //     fetchData();\n  // },[movID])\n\n\n  useEffect(() => {\n    let isMounted = true; \n    async function fetchData() {\n      let result = await moviesBL.getMovie(movID);\n      if(isMounted){\n        setMovie(result.data)\n        setMovGen(result.data.genres)\n      }\n    }\n    fetchData();\n    return  () => { isMounted = false };\n  }, [movID])\n\n\n  const goToEdit = ()=>\n  {\n    props.history.push(\"/main/movies/edit-movie/\" + movID)\n  } \n\n  const deleteMov = async()=>\n  {\n    let result = await moviesBL.deleteMovie(movID);\n    let result2 = await subBL.deleteSubPerMovie(movID)\n    alert(result.data);\n    window.location.reload();\n  }\n\n  return (\n\n    <Card className={classes.root}>\n     \n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        {movie.name}, {movie.premiered}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        Genres: &nbsp;\n       \n       {movGen.map((gen, index)=> \n       {\n         return <span key={index}>{gen} </span> \n       }) } \n        \n        </Typography>\n\n        <CardMedia\n        component=\"img\"\n        className={classes.media}\n        image={movie.image}\n        title={movie.name}\n      />\n\n      <SubPerMovie movId={movID}/>\n      </CardContent>\n   \n    <CardActions>\n      <Button onClick={goToEdit} size=\"small\" color=\"primary\">\n        Edit\n      </Button>\n      <Button size=\"small\" color=\"primary\" onClick={deleteMov}>\n        Delete \n      </Button>\n    </CardActions>\n  </Card>\n  );\n}\n\nexport default withRouter(MovieComp);\n"]},"metadata":{},"sourceType":"module"}