{"ast":null,"code":"var _jsxFileName = \"/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/MovieComp.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400\n  },\n  media: {\n    height: 250,\n    width: 200\n  }\n});\n\nfunction MovieComp(props) {\n  _s();\n\n  const classes = useStyles();\n  const [movID, setMovID] = useState(props.movId);\n  const [movie, setMovie] = useState({});\n  const [movGen, setMovGen] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      let result = await moviesBL.getMovie(movID);\n      setMovie(result.data);\n      setMovGen(result.data.genres);\n    }\n\n    fetchData();\n  }, [movID]);\n\n  const goToEdit = () => {\n    props.history.push(\"/main/edit-movie/\" + movID);\n  };\n\n  const deleteMov = async () => {\n    let result = await moviesBL.deleteMovie(movID);\n    alert(result.data);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        children: [movie.name, \", \", movie.premiered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: [\"Genres: \\xA0\", movGen.map((gen, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [gen, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: movie.image,\n        title: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goToEdit,\n        size: \"small\",\n        color: \"primary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: deleteMov,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieComp, \"i5rztZ8WdpvOIFJzbnymVxC28KU=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieComp;\nexport default _c2 = withRouter(MovieComp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieComp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/MovieComp.js"],"names":["useState","useEffect","moviesBL","withRouter","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useStyles","root","maxWidth","media","height","width","MovieComp","props","classes","movID","setMovID","movId","movie","setMovie","movGen","setMovGen","fetchData","result","getMovie","data","genres","goToEdit","history","push","deleteMov","deleteMovie","alert","window","location","reload","name","premiered","map","gen","index","image"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils'\nimport {withRouter} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n  },\n  media: {\n    height: 250,\n    width: 200\n  },\n});\n\nfunction MovieComp(props) {\n\n  const classes = useStyles();\n\n  const [movID, setMovID] = useState(props.movId);\n  const [movie, setMovie] = useState({});\n  const [movGen , setMovGen] = useState([]);\n\n\n\n    useEffect( () => {\n      async function fetchData() {\n        let result = await moviesBL.getMovie(movID);\n        setMovie(result.data)\n        setMovGen(result.data.genres)\n      }\n      fetchData();\n  },[movID])\n\n\n\n  const goToEdit = ()=>\n  {\n    props.history.push(\"/main/edit-movie/\" + movID)\n  } \n\n  const deleteMov = async()=>\n  {\n    let result = await moviesBL.deleteMovie(movID);\n    alert(result.data);\n    window.location.reload();\n  }\n\n  return (\n\n    <Card className={classes.root}>\n     \n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        {movie.name}, {movie.premiered}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        Genres: &nbsp;\n       \n       {movGen.map((gen, index)=> \n       {\n         return <span key={index}>{gen} </span> \n       }) } \n        \n        </Typography>\n\n        <CardMedia\n        className={classes.media}\n        image={movie.image}\n        title={movie.name}\n      />\n      </CardContent>\n   \n    <CardActions>\n      <Button onClick={goToEdit} size=\"small\" color=\"primary\">\n        Edit\n      </Button>\n      <Button size=\"small\" color=\"primary\" onClick={deleteMov}>\n        Delete \n      </Button>\n    </CardActions>\n  </Card>\n  );\n}\n\nexport default withRouter(MovieComp);\n"]},"metadata":{},"sourceType":"module"}