{"ast":null,"code":"var _jsxFileName = \"/Users/fundguard/Desktop/Full stack course/HW/Projects/React/mern_stack_project/clinet/myapp/src/subscriptions/SubPerMember.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport subsBL from '../utils/subscriptionUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: 10\n  }\n});\n\nfunction SubPerMemberComp(props) {\n  _s();\n\n  const classes = useStyles();\n  const [memID] = useState(props.memId);\n  const [subs, setSubs] = useState([]);\n  const [relevantMovies, setRelevantMovies] = useState([]);\n  const [isSubToNewMovieVisible, setIsSubToNewMovieVisible] = useState(false);\n  const [newSubDate, setNewSubDate] = useState('');\n  useEffect(() => {\n    // let isMounted = true; \n    async function fetchData() {\n      let result = await subsBL.getSubsPerMemberID(memID); // if(isMounted){\n\n      setSubs(result); // }\n    }\n\n    fetchData(); // return  () => { isMounted = false };\n  }, [memID]);\n\n  const ShowHide = () => {\n    console.log(isSubToNewMovieVisible);\n    setIsSubToNewMovieVisible(!isSubToNewMovieVisible);\n    console.log(isSubToNewMovieVisible);\n\n    if (isSubToNewMovieVisible === false) {\n      getMovies();\n    }\n  };\n\n  const getMovies = async () => {\n    let anotherResult = await subsBL.getMoviesDidNotWatchedForMember(memID);\n    setRelevantMovies(anotherResult);\n  };\n\n  const SaveNewSub = e => {\n    e.preventDefault();\n    let newSub = {};\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Movies Watched:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: subs.map(sub => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/main/movies/edit-movie/\" + sub.movId,\n                children: sub.movName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 42\n              }, this), \"\\xA0\", sub.date]\n            }, sub.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        onClick: ShowHide,\n        children: \"Subscribe To a New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), isSubToNewMovieVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add movie:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => SaveNewSub(e),\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"movieID\",\n          children: relevantMovies.map(mov => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: mov._id,\n              children: [\" \", mov.name, \" \"]\n            }, mov._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setNewSubDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 3\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SubPerMemberComp, \"LeslcOOnCHnA2MBGbWwuXTedL9o=\", false, function () {\n  return [useStyles];\n});\n\n_c = SubPerMemberComp;\nexport default _c2 = withRouter(SubPerMemberComp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SubPerMemberComp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/mern_stack_project/clinet/myapp/src/subscriptions/SubPerMember.js"],"names":["useState","useEffect","withRouter","makeStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Link","subsBL","useStyles","root","maxWidth","margin","SubPerMemberComp","props","classes","memID","memId","subs","setSubs","relevantMovies","setRelevantMovies","isSubToNewMovieVisible","setIsSubToNewMovieVisible","newSubDate","setNewSubDate","fetchData","result","getSubsPerMemberID","ShowHide","console","log","getMovies","anotherResult","getMoviesDidNotWatchedForMember","SaveNewSub","e","preventDefault","newSub","map","sub","movId","movName","date","id","mov","_id","name","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from 'react-router-dom';\nimport subsBL from '../utils/subscriptionUtils';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: 10\n\n  },\n\n});\n\nfunction SubPerMemberComp(props) {\n\n  const classes = useStyles();\n\n  const [memID] = useState(props.memId);\n  const [subs, setSubs] = useState([]);\n  const [relevantMovies, setRelevantMovies] = useState([]);\n  const [isSubToNewMovieVisible, setIsSubToNewMovieVisible] = useState(false);\n  const [newSubDate, setNewSubDate] = useState('');\n  \n  useEffect(() => {\n    // let isMounted = true; \n    async function fetchData() {\n      let result = await subsBL.getSubsPerMemberID(memID);\n      // if(isMounted){\n        setSubs(result);\n      // }\n    }\n    fetchData();\n    // return  () => { isMounted = false };\n  }, [memID])\n  \n  const ShowHide = ()=>\n  {\n    console.log(isSubToNewMovieVisible);\n     setIsSubToNewMovieVisible(!isSubToNewMovieVisible);\n    console.log(isSubToNewMovieVisible);\n\n    if(isSubToNewMovieVisible === false)\n    {\n      getMovies();\n    }\n  }\n\n  const getMovies = async () => \n  {\n    let anotherResult = await subsBL.getMoviesDidNotWatchedForMember(memID);\n    setRelevantMovies(anotherResult);\n  }\n\n  const SaveNewSub = (e)=>\n  {\n    e.preventDefault();\n    let newSub = {}\n\n  }\n  return (\n\n    <Card className={classes.root}>\n    <CardActionArea>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n      Movies Watched:\n        </Typography>\n        <ul>\n          {\n            subs.map((sub) =>\n              {\n                return <li key={sub.id}> <Link to={\"/main/movies/edit-movie/\" + sub.movId}>{sub.movName}</Link>&nbsp;\n                  {sub.date}</li>\n              })\n          }\n        </ul>\n   \n        \n      </CardContent>\n    </CardActionArea>\n    <CardActions>\n    <Button variant=\"contained\" size=\"small\" onClick={ShowHide}>\n      Subscribe To a New Movie</Button>\n    </CardActions>\n    {isSubToNewMovieVisible? <div> \n      <h3>Add movie:</h3>\n      <form onSubmit={ (e) => SaveNewSub(e)}>\n      <select name=\"movieID\">\n       {\n         relevantMovies.map((mov) => \n          {\n            return <option value={mov._id} key={mov._id}> {mov.name} </option>\n          })\n       }\n     </select> &nbsp; \n<input type=\"date\" onChange={e => setNewSubDate(e.target.value)}/>\n  <br/>  <br/>\n <input type=\"submit\" value=\"Save\" />\n      </form>\n     \n\n    </div> : <div>  </div>}\n  </Card>\n\n\n  );\n}\n\nexport default withRouter(SubPerMemberComp) ;\n"]},"metadata":{},"sourceType":"module"}