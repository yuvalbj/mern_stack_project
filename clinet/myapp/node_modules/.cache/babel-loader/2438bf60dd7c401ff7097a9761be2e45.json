{"ast":null,"code":"var _jsxFileName = \"/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/MovieComp.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\nfunction MovieComp(props) {\n  _s();\n\n  const classes = useStyles();\n  const [movID, setMovId] = useState(props.movId);\n  const [movie, setMovie] = useState({});\n  const [movGen, setMovGen] = useState([]);\n  useEffect(async () => {\n    let result = await moviesBL.getMovie(movID);\n    setMovie(result.data);\n    setMovGen(result.data.genres);\n  }, []);\n\n  const goToEdit = () => {\n    props.history.push(\"/edit/\" + movID);\n  };\n\n  const styles = {\n    border: '3px solid black',\n    margin: '2px',\n    width: '400px'\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: movie.image,\n        title: \"Contemplative Reptile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          children: [movie.name, \", \", movie.premiered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [\"Genres:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: movGen.map((gen, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: gen\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: goToEdit,\n        size: \"small\",\n        color: \"primary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) // <div className=\"App\" style={styles}>\n  //   <h3>{movie.name}, {movie.premiered}</h3>\n  //   Genres:\n  //   <ul>\n  //   {movGen.map((gen, index)=> \n  //   {\n  //     return <li key={index}>{gen}</li>\n  //   }) }\n  //     </ul> \n  //     <img src={movie.image} alt={movie.name} />\n  //         <button onClick={goToEdit}>Edit Movie</button>\n  // </div>\n  ;\n}\n\n_s(MovieComp, \"wkkTND/fnSxiXCM/XfIx1prsYe8=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieComp;\nexport default _c2 = withRouter(MovieComp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieComp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/movies/MovieComp.js"],"names":["useState","useEffect","moviesBL","withRouter","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useStyles","root","maxWidth","media","height","MovieComp","props","classes","movID","setMovId","movId","movie","setMovie","movGen","setMovGen","result","getMovie","data","genres","goToEdit","history","push","styles","border","margin","width","image","name","premiered","map","gen","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moviesBL from './moviesUtils'\nimport {withRouter} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MovieComp(props) {\n\n  const classes = useStyles();\n\n  const [movID , setMovId] = useState(props.movId);\n  const [movie, setMovie] = useState({});\n  const [movGen , setMovGen] = useState([]);\n  useEffect(async () => {\n  let result = await moviesBL.getMovie(movID);\n  setMovie(result.data)\n  setMovGen(result.data.genres)\n  }, [])\n\n  const goToEdit = ()=>\n  {\n    props.history.push(\"/edit/\" + movID)\n  } \n  const styles = {\n    border: '3px solid black', \n    margin: '2px',\n    width: '400px'\n};\n  return (\n\n    <Card className={classes.root}>\n    <CardActionArea>\n      <CardMedia\n        className={classes.media}\n        image={movie.image}\n        title=\"Contemplative Reptile\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        {movie.name}, {movie.premiered}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        Genres:\n       <ul>\n       {movGen.map((gen, index)=> \n       {\n         return <li key={index}>{gen}</li>\n       }) }\n         </ul> \n        </Typography>\n      </CardContent>\n    </CardActionArea>\n    <CardActions>\n      <Button onClick={goToEdit} size=\"small\" color=\"primary\">\n        Edit\n      </Button>\n      <Button size=\"small\" color=\"primary\">\n        Delete \n      </Button>\n    </CardActions>\n  </Card>\n\n    \n    // <div className=\"App\" style={styles}>\n    //   <h3>{movie.name}, {movie.premiered}</h3>\n    //   Genres:\n    //   <ul>\n    //   {movGen.map((gen, index)=> \n    //   {\n    //     return <li key={index}>{gen}</li>\n    //   }) }\n    //     </ul> \n\n    //     <img src={movie.image} alt={movie.name} />\n    //         <button onClick={goToEdit}>Edit Movie</button>\n    // </div>\n  );\n}\n\nexport default withRouter(MovieComp) ;\n"]},"metadata":{},"sourceType":"module"}