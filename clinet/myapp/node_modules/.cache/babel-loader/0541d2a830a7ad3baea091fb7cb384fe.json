{"ast":null,"code":"import axios from 'axios';\n\nconst getAllUsers = () => {\n  return axios.get(\"http://localhost:8000/api/users\");\n};\n\nconst isAllowedToLogin = async (usrName, pwd) => {\n  let result = await axios.get(\"http://localhost:8000/api/users\");\n  let allUsers = result.data;\n  let users = allUsers.filter(usr => usr.username === usrName && usr.password === pwd);\n\n  if (users.length > 0) {\n    let isAllowed = {\n      allowedToLogin: true,\n      fullName: users[0].full_name\n    };\n    console.log(isAllowed);\n    return isAllowed;\n  } else {\n    let isAllowed = {\n      allowedToLogin: false,\n      fullName: null\n    };\n    console.log(isAllowed);\n    return isAllowed;\n  }\n};\n\nexport default {\n  getAllUsers,\n  isAllowedToLogin\n};","map":{"version":3,"sources":["/Users/fundguard/Desktop/Full stack course/HW/Projects/React/clinet/myapp/src/userUtils.js"],"names":["axios","getAllUsers","get","isAllowedToLogin","usrName","pwd","result","allUsers","data","users","filter","usr","username","password","length","isAllowed","allowedToLogin","fullName","full_name","console","log"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,MACpB;AACI,SAAOD,KAAK,CAACE,GAAN,CAAU,iCAAV,CAAP;AACH,CAHD;;AAKA,MAAMC,gBAAgB,GAAG,OAAOC,OAAP,EAAgBC,GAAhB,KACzB;AACE,MAAIC,MAAM,GAAG,MAAMN,KAAK,CAACE,GAAN,CAAU,iCAAV,CAAnB;AACA,MAAIK,QAAQ,GAAGD,MAAM,CAACE,IAAtB;AAEA,MAAIC,KAAK,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,GAAG,IAAKA,GAAG,CAACC,QAAJ,KAAiBR,OAAjB,IAA4BO,GAAG,CAACE,QAAJ,KAAiBR,GAArE,CAAZ;;AACE,MAAGI,KAAK,CAACK,MAAN,GAAe,CAAlB,EACA;AACE,QAAIC,SAAS,GAAG;AAACC,MAAAA,cAAc,EAAG,IAAlB;AAAwBC,MAAAA,QAAQ,EAAGR,KAAK,CAAC,CAAD,CAAL,CAASS;AAA5C,KAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,WAAOA,SAAP;AACD,GALD,MAOA;AACE,QAAIA,SAAS,GAAG;AAACC,MAAAA,cAAc,EAAG,KAAlB;AAAyBC,MAAAA,QAAQ,EAAG;AAApC,KAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEA,WAAOA,SAAP;AACD;AAGJ,CArBD;;AAuBA,eAAe;AAACd,EAAAA,WAAD;AAAaE,EAAAA;AAAb,CAAf","sourcesContent":["\nimport axios from 'axios';\n\nconst getAllUsers = ()=> \n{\n    return axios.get(\"http://localhost:8000/api/users\");\n}\n\nconst isAllowedToLogin = async (usrName, pwd)=> \n{\n  let result = await axios.get(\"http://localhost:8000/api/users\");\n  let allUsers = result.data;\n  \n  let users = allUsers.filter(usr =>  usr.username === usrName && usr.password === pwd)\n    if(users.length > 0)\n    {\n      let isAllowed = {allowedToLogin : true, fullName : users[0].full_name}\n      console.log(isAllowed)\n      return isAllowed;\n    }\n    else\n    {\n      let isAllowed = {allowedToLogin : false, fullName : null}\n      console.log(isAllowed)\n\n      return isAllowed;\n    }\n    \n\n}\n\nexport default {getAllUsers,isAllowedToLogin};\n"]},"metadata":{},"sourceType":"module"}